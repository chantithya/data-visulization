{"version":3,"file":"static/js/682.9789734e.chunk.js","mappings":"sLAsBe,SAASA,EAAQC,GAAY,IAAX,KAAEC,GAAMD,EACvC,MA4BME,EA5BeD,KACnB,MAAME,EAAU,CAAC,EAmBjB,OAjBAF,EAAKG,SAAQC,IACX,MAAMC,EAAQC,WAAWF,EAAKG,OACzBL,EAAQE,EAAKI,OAQhBN,EAAQE,EAAKI,MAAMC,OAAOC,KAAKL,GAC/BH,EAAQE,EAAKI,MAAMG,IAAMC,KAAKD,IAAIT,EAAQE,EAAKI,MAAMG,IAAKN,GAC1DH,EAAQE,EAAKI,MAAMK,IAAMD,KAAKC,IAAIX,EAAQE,EAAKI,MAAMK,IAAKR,GAC1DH,EAAQE,EAAKI,MAAMM,KAAOT,GAV1BH,EAAQE,EAAKI,MAAQ,CACnBC,OAAQ,CAACJ,GACTM,IAAKN,EACLQ,IAAKR,EACLS,IAAKT,EAOT,IAGKU,OAAOC,KAAKd,GAASe,KAAIC,IAAI,CAClCA,OACAP,IAAKT,EAAQgB,GAAMP,IACnBE,IAAKX,EAAQgB,GAAML,IACnBM,IAAKjB,EAAQgB,GAAMJ,IAAMZ,EAAQgB,GAAMT,OAAOW,UAC7C,EAGiBC,CAAYrB,GAE5BsB,EAAY,CAChBC,OAAQtB,EAAcgB,KAAIb,GAAQA,EAAKc,OACvCM,SAAU,CACR,CACEC,MAAO,gBACPzB,KAAMC,EAAcgB,KAAIb,GAAQA,EAAKO,MACrCe,gBAAiB,0BACjBC,YAAa,wBACbC,YAAa,GAEf,CACEH,MAAO,gBACPzB,KAAMC,EAAcgB,KAAIb,GAAQA,EAAKe,MACrCO,gBAAiB,0BACjBC,YAAa,wBACbC,YAAa,GAEf,CACEH,MAAO,gBACPzB,KAAMC,EAAcgB,KAAIb,GAAQA,EAAKS,MACrCa,gBAAiB,0BACjBC,YAAa,wBACbC,YAAa,KAgDnB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BF,EAAAA,EAAAA,KAACG,EAAAA,GAAG,CAAChC,KAAMsB,EAAWW,QA7CV,CACdC,YAAY,EACZC,qBAAqB,EACrBC,QAAS,CACPC,OAAQ,CACNC,SAAU,OAEZC,MAAO,CACLC,SAAS,EACTC,KAAM,kCAERC,QAAS,CACPC,UAAW,CACTlB,MAAO,SAASmB,GACd,MAAO,GAAGA,EAAQC,QAAQpB,WAAWmB,EAAQE,IAAIC,QAAQ,IAC3D,KAINC,OAAQ,CACNC,EAAG,CACDC,SAAS,EACTX,MAAO,CACLC,SAAS,EACTC,KAAM,kBAGVU,EAAG,CACDD,SAAS,EACTE,aAAa,EACbb,MAAO,CACLC,SAAS,EACTC,KAAM,aAERY,MAAO,CACLC,SAAU,SAASC,GACjB,MAAO,IAAMA,CACf,SAWV,CAnHAC,EAAAA,GAAQC,SACNC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G","sources":["components/BarChart.js"],"sourcesContent":["// src/components/BarChart.js\nimport React from 'react';\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from 'chart.js';\nimport { Bar } from 'react-chartjs-2';\n\nChartJS.register(\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend\n);\n\nexport default function BarChart({ data }) {\n  const processData = (data) => {\n    const typeMap = {};\n\n    data.forEach(item => {\n      const price = parseFloat(item.Price);\n      if (!typeMap[item.Type]) {\n        typeMap[item.Type] = {\n          prices: [price],\n          min: price,\n          max: price,\n          sum: price\n        };\n      } else {\n        typeMap[item.Type].prices.push(price);\n        typeMap[item.Type].min = Math.min(typeMap[item.Type].min, price);\n        typeMap[item.Type].max = Math.max(typeMap[item.Type].max, price);\n        typeMap[item.Type].sum += price;\n      }\n    });\n\n    return Object.keys(typeMap).map(type => ({\n      type,\n      min: typeMap[type].min,\n      max: typeMap[type].max,\n      avg: typeMap[type].sum / typeMap[type].prices.length\n    }));\n  };\n\n  const processedData = processData(data);\n\n  const chartData = {\n    labels: processedData.map(item => item.type),\n    datasets: [\n      {\n        label: 'Minimum Price',\n        data: processedData.map(item => item.min),\n        backgroundColor: 'rgba(75, 192, 192, 0.6)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n      },\n      {\n        label: 'Average Price',\n        data: processedData.map(item => item.avg),\n        backgroundColor: 'rgba(54, 162, 235, 0.6)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        borderWidth: 1,\n      },\n      {\n        label: 'Maximum Price',\n        data: processedData.map(item => item.max),\n        backgroundColor: 'rgba(255, 99, 132, 0.6)',\n        borderColor: 'rgba(255, 99, 132, 1)',\n        borderWidth: 1,\n      }\n    ],\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false, // Makes the chart adapt to container size\n    plugins: {\n      legend: {\n        position: 'top',\n      },\n      title: {\n        display: true,\n        text: 'Price Analysis by Product Type',\n      },\n      tooltip: {\n        callbacks: {\n          label: function(context) {\n            return `${context.dataset.label}: $${context.raw.toFixed(2)}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        stacked: true,\n        title: {\n          display: true,\n          text: 'Product Types'\n        }\n      },\n      y: {\n        stacked: false,\n        beginAtZero: true,\n        title: {\n          display: true,\n          text: 'Price ($)'\n        },\n        ticks: {\n          callback: function(value) {\n            return '$' + value;\n          }\n        }\n      }\n    }\n  };\n\n  return (\n    <div className=\"chart-wrapper\">\n      <Bar data={chartData} options={options} />\n    </div>\n  );\n}\n"],"names":["BarChart","_ref","data","processedData","typeMap","forEach","item","price","parseFloat","Price","Type","prices","push","min","Math","max","sum","Object","keys","map","type","avg","length","processData","chartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","_jsx","className","children","Bar","options","responsive","maintainAspectRatio","plugins","legend","position","title","display","text","tooltip","callbacks","context","dataset","raw","toFixed","scales","x","stacked","y","beginAtZero","ticks","callback","value","ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend"],"sourceRoot":""}