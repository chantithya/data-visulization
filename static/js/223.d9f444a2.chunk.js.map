{"version":3,"file":"static/js/223.d9f444a2.chunk.js","mappings":"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","sources":["components/StackedBarChart.js"],"sourcesContent":["import React, { useRef } from \"react\";\nimport jsPDF from \"jspdf\";\nimport html2canvas from \"html2canvas\";\nimport { Bar } from \"react-chartjs-2\";\n\nimport {\n  Chart as ChartJS,\n  CategoryScale,\n  LinearScale,\n  BarElement,\n  Title,\n  Tooltip,\n  Legend,\n} from \"chart.js\";\n\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nconst colorPalette = {\n  \"Black\": \"#000000\",\n  \"Primrose Pink\": \"#D81B60\",\n  \"Baby Blue\": \"#89CFF0\",\n  \"Cobalt Blue\": \"#0047AB\",\n  \"Deep Green\": \"#006400\",\n  \"Matte Black\": \"#28282B\",\n  \"Sky Blue\": \"#87CEEB\",\n  \"Purple\": \"#800080\",\n  \"Purple (Glitter)\": \"#8E3FE2\",\n  \"Indigo (Glitter)\": \"#4B0082\",\n  \"Clear\": \"#FFFFFF\", // usually transparent, fallback to white\n  \"Sky-Blue\": \"#00BFFF\",\n  \"Indigo\": \"#4b0082\",\n  \"Classic Blue\": \"#0f4c81\",\n  \"Leopard\": \"#f48700\",\n  \"Black Croc\": \"#1C1C1C\",\n  \"Burgundy Croc\": \"#800020\",\n  \"Tan Blue\": \"#D2B48C\",\n  \"Silver on Black\": \"#A9A9A9\",\n  \"Black on Black\": \"#1A1A1A\",\n  \"Mint Brown\": \"#8B6F4E\",\n  \"Lilac Green\": \"#9DC183\",\n  \"Frost\": \"#E5F9F6\",\n  \"Tan\": \"#D2B48C\",\n  \"Matte Charcoal\": \"#36454F\",\n  \"Matte Greige\": \"#BEB6B0\",\n  \"Matte Deep Purple\": \"#673AB7\",\n  \"Matte Dusty Rose\": \"#C08081\",\n  \"Cotton Candy\": \"#FFBCD9\",\n  \"Peach Haze\": \"#FFDAB9\",\n  \"Pink Ombre\": \"#FFB6C1\",\n  \"Peri Purple\": \"#CCCCFF\",\n  \"Glossy Black\": \"#252324\",\n  \"Neonyellow\": \"#E4FF1A\",\n  \"Glossy Frost\": \"#E0FFFF\",\n  \"Pink Blue\": \"#FF69B4\",\n  \"Red\": \"#FF0000\",\n  \"Dark Purple\": \"#301934\",\n  \"Glitter Yellow\": \"#FFF700\",\n  \"Neon Yellow\": \"#FFFF33\",\n  \"Midnight Green\": \"#004953\",\n  \"Silver on Silver\": \"#C0C0C0\",\n  \"Peach\": \"#FFE5B4\",\n  \"Olive\": \"#808000\",\n  \"Sunset\": \"#FFCC99\",\n  \"Matte Red\": \"#A52A2A\",\n  \"Orange\": \"#FFA500\",\n  \"Yellow\": \"#FFFF00\",\n  \"Green\": \"#008000\",\n  \"Blue\": \"#0000FF\",\n  \"Glossy Black Black\": \"#111111\",\n  \"Matte Light Blue\": \"#ADD8E6\",\n  \"Iridescent\": \"#E1E6FF\",\n  \"Triple Black\": \"#0A0A0A\",\n  \"Sierra Blue\": \"#6A9FB5\",\n  \"White\": \"#FFFFFF\",\n  \"Matte Off White\": \"#FAF9F6\",\n  \"Phantom Black\": \"#1B1B1B\",\n  \"Glossy Clear\": \"#F8F8F8\",\n  \"Pink\": \"#FFC0CB\",\n  \"Glossy Light Blue\": \"#B3D9FF\",\n  \"Kiwi\": \"#8EE53F\",\n  \"Bubble Gum\": \"#FFC1CC\",\n  \"Matte Purple\": \"#9370DB\",\n  \"Matte White Sand\": \"#F5F5DC\",\n  \"Matte Pink\": \"#FFB6C1\",\n  \"Silver on Blck\": \"#C0C0C0\",\n  \"Matte Taupe\": \"#483C32\",\n  \"Haze Purple\": \"#DCD0FF\",\n  \"Lilac\": \"#C8A2C8\",\n  \"Purple Disco\": \"#9F00C5\",\n  \"Jet Black\": \"#343434\",\n  \"Navy Blue\": \"#000080\",\n  \"Latte\": \"#A7856A\",\n  \"Oat Milk\": \"#F6E2B3\",\n  \"Greige (Light Brown)\": \"#BEB6AA\",\n  \"Polar Blue\": \"#A3D8F4\",\n  \"Violet Purple\": \"#7F00FF\",\n  \"Kelly Green\": \"#4CBB17\",\n  \"Deep Purple\": \"#673AB7\",\n  \"Berry Pink\": \"#FF66CC\",\n  \"Matte Vapor Blue\": \"#B6D0E2\",\n  \"Hot Pink\": \"#FF69B4\",\n  \"Neon Yellow-\": \"#FFFF33\"\n};\n\n\n\n\nexport default function StackedBarChart({ data }) {\n  const chartRef = useRef(null);\n\n  // download image\n  const handleDownloadImage = () => {\n    const chart = chartRef.current;\n    if (chart) {\n      const url = chart.toBase64Image(\"image/png\", 1);\n      const link = document.createElement(\"a\");\n      link.href = url;\n      link.download = \"stacked-bar-chart.png\";\n      link.click();\n    }\n  };\n\n  // download pdf\n  const handleDownloadPDF = async () => {\n    const input = document.getElementById(\"chart-container\");\n    if (input) {\n      const canvas = await html2canvas(input);\n      const imgData = canvas.toDataURL(\"image/png\");\n      const pdf = new jsPDF(\"landscape\", \"mm\", \"a4\");\n      const width = pdf.internal.pageSize.getWidth();\n      const height = (canvas.height * width) / canvas.width;\n      pdf.addImage(imgData, \"PNG\", 0, 10, width, height - 20);\n      pdf.save(\"stacked-bar-chart.pdf\");\n    }\n  };\n\n  const colorMap = new Map();\n\n  const normalizeColorName = (colorName) => {\n    return colorName\n      .toLowerCase()\n      .replace(/\\s+/g, \"\") // Remove spaces\n      .replace(/[-()]/g, \"\"); // Remove hyphens and parentheses\n  };\n  \n  const processData = (data) => {\n    const grouped = {};\n    const colorVariants = new Set();\n  \n    data.forEach((item) => {\n      const type = item.Type;\n      const variant = normalizeColorName(item.DataItemType); // Normalize color name\n      const price = parseFloat(item.Price);\n  \n      if (!grouped[variant]) grouped[variant] = {};\n      if (!grouped[variant][type]) grouped[variant][type] = 0;\n  \n      grouped[variant][type] += price;\n      colorVariants.add(variant);\n    });\n  \n    // Assign colors\n    const colorKeys = Object.keys(colorPalette);\n    Array.from(colorVariants).forEach((variant, index) => {\n      const colorName = colorKeys.find((key) => normalizeColorName(key) === variant);\n      if (colorName) {\n        colorMap.set(variant, colorPalette[colorName]);\n      }\n    });\n  \n    console.log(\"Color Variants Map:\", Object.fromEntries(colorMap.entries()));\n  \n    const productTypes = [...new Set(data.map((item) => item.Type))];\n    const datasets = Array.from(colorVariants).map((variant) => ({\n      label: variant,\n      data: productTypes.map((type) => grouped[variant][type] || 0),\n      backgroundColor: colorMap.get(variant),\n    }));\n  \n    return {\n      labels: productTypes,\n      datasets,\n    };\n  };\n  \n\n  const chartData = processData(data);\n\n  const options = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: \"Sum Price by Product Type & Color Variant\",\n        font: { size: 20 },\n        padding: { top: 10, bottom: 30 },\n      },\n      legend: {\n        position: \"top\",\n        labels: {\n          font: { size: 14 },\n        },\n      },\n      tooltip: {\n        callbacks: {\n          // Custom tooltip callback\n          label: (context) => {\n            const dataset = context.dataset;\n            const type = dataset.label;\n            const price = context.raw.toFixed(2);\n            return `${type}: $${price}`;\n          },\n        },\n      },\n    },\n    scales: {\n      x: {\n        stacked: true,\n        title: {\n          display: true,\n          text: \"Product Type\",\n          font: { size: 14 },\n        },\n      },\n      y: {\n        stacked: true,\n        title: {\n          display: true,\n          text: \"Total Price ($)\",\n          font: { size: 14 },\n        },\n      },\n    },\n  };\n  \n\n    return (\n    <div\n      id=\"chart-container\"\n      style={{\n        padding: \"2rem\",\n        maxWidth: \"12000px\",\n        margin: \"2rem auto\",\n      }}\n    >\n      <Bar ref={chartRef} data={chartData} options={options} height={500} />\n\n      <div style={{ marginTop: \"1.5rem\", display: \"flex\", gap: \"1rem\" }}>\n        <button onClick={handleDownloadImage} style={buttonStyle}>\n          📸 Download Image\n        </button>\n        <button onClick={handleDownloadPDF} style={buttonStyle}>\n          📄 Download PDF\n        </button>\n      </div>\n\n      <div style={{ marginTop: \"2rem\" }}>\n        <h3 style={{ fontSize: \"18px\", marginBottom: \"1rem\" }}>🎨 Color Variants:</h3>\n          <ul style={{ columns: 2, listStyle: \"none\", padding: 0 }}>\n            {Array.from(colorMap.entries()).map(([variant, color]) => (\n              <li\n                key={variant}\n                style={{ marginBottom: \"0.5rem\", display: \"flex\", alignItems: \"center\" }}\n              >\n                <div\n                  style={{\n                    width: 18,\n                    height: 18,\n                    backgroundColor: color,\n                    borderRadius: \"4px\",\n                    marginRight: \"0.5rem\",\n                    border: \"1px solid #ccc\",\n                  }}\n                ></div>\n                <span>\n                  {variant} : <code>{color}</code>\n                </span>\n              </li>\n            ))}\n          </ul>\n\n      </div>\n    </div>\n  );\n}\n\nconst buttonStyle = {\n  padding: \"0.6rem 1.2rem\",\n  fontSize: \"1rem\",\n  backgroundColor: \"#4CAF50\",\n  color: \"#fff\",\n  border: \"none\",\n  borderRadius: \"8px\",\n  cursor: \"pointer\",\n  transition: \"background-color 0.3s ease\",\n};\n\nbuttonStyle[':hover'] = {\n  backgroundColor: \"#45a049\",\n};\n\n\n"],"names":["ChartJS","register","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","colorPalette","StackedBarChart","_ref","data","chartRef","useRef","colorMap","Map","normalizeColorName","colorName","toLowerCase","replace","chartData","grouped","colorVariants","Set","forEach","item","type","Type","variant","DataItemType","price","parseFloat","Price","add","colorKeys","Object","keys","Array","from","index","find","key","set","console","log","fromEntries","entries","productTypes","map","datasets","label","backgroundColor","get","labels","processData","_jsxs","id","style","padding","maxWidth","margin","children","_jsx","Bar","ref","options","responsive","plugins","title","display","text","font","size","top","bottom","legend","position","tooltip","callbacks","context","dataset","raw","toFixed","scales","x","stacked","y","height","marginTop","gap","onClick","handleDownloadImage","chart","current","url","toBase64Image","link","document","createElement","href","download","click","buttonStyle","async","input","getElementById","canvas","html2canvas","imgData","toDataURL","pdf","jsPDF","width","internal","pageSize","getWidth","addImage","save","fontSize","marginBottom","columns","listStyle","_ref2","color","alignItems","borderRadius","marginRight","border","cursor","transition"],"sourceRoot":""}